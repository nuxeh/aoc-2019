(use-modules (srfi srfi-1))

;(define (get-path cmds p)
;  (if (null? (car cmds))
;    p
;    ((navigate (car cmds))
;    (display (cdr cmds))
;    (display " ")
;    (get-path (cdr cmds) p))))

(define (navigate cmd)
  (let ((x (string->number (string-copy cmd 1))))
    (let ((d (string-copy cmd 0 1)))
      (if (string=? d "U")
        (display "up"))
      (if (string=? d "D")
        (display "down"))
      (if (string=? d "L")
        (display "left"))
      (if (string=? d "R")
        (display "right"))
      (display x))))

(define (walk cmd acc)
  (display cmd)
  (display acc)
  (append acc (list cmd)))

(let ((p1 (read)))
  (let ((p2 (read)))
    (let ((i (string-split (symbol->string p1) #\,)))
    (let ((j (string-split (symbol->string p2) #\,)))
    (display i)
    (newline)
    (display j)
    (newline)
    (let ((p/1 (fold walk (list) i)))
;    (let ((p/2 (get-path j (list))))
      (display p/1)
;      (display p/2)
    )))))


